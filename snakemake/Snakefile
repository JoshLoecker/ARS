import os
from pathlib import Path

configfile: "config.yaml"

def CheckBarcodeFolderPathsUsingWildcards(wildcards):
    path = checkpoints.barcode.get().output[0]
    full_directory_paths = []
    for item in os.listdir(path):
        full_path = Path(os.path.join(path, item))
        if full_path.is_dir():
            full_directory_paths.append(str(full_path))
    return full_directory_paths

def ReturnBarcodeFolderNames():
    path = config['results_folder'] + ".barcodeTempOutput"
    directory_names = []
    for item in os.listdir(path):
        full_path = Path(os.path.join(path, item))
        if full_path.is_dir():
            directory_names.append(str(item))
    return directory_names

FAST5_FILES, = glob_wildcards(config['results_folder'] + "DataFiles/fast5/{fast5_files}.fast5")

rule all:
    input:
        expand(config['results_folder'] + "Basecall/{fast5_file}", fast5_file=FAST5_FILES),
        # config['results_folder'] + "Barcode/merge_complete"  # SAVE THIS
        expand(config['results_folder'] + "Barcode/{barcode_folder}", barcode_folder=ReturnBarcodeFolderNames())

rule basecall:
    input:
         config['results_folder'] + "DataFiles/fast5/{fast5_file}.fast5"
    output:
        directory(config['results_folder'] + "Basecall/{fast5_file}")
    shell:
         r"""
         ls {input} \
         | \
         guppy_basecaller \
         --save_path {output} \
         --quiet \
         --config dna_r9.4.1_450bps_fast.cfg \
         --num_callers 2 \
         --cpu_threads_per_caller 6
         """

checkpoint barcode:
    input:
        config['results_folder'] + "Basecall/"
    output:
        temp(directory(config['results_folder'] + ".barcodeTempOutput/basecall_summary.txt"))
    shell:
         r"""
         guppy_barcoder \
        --input_path {input} \
        --save_path {output} \
        --barcode_kits EXP-PBC096 \
        --recursive
         """

rule merge_files:
    input:
        # config['results_folder'] + ".barcodeTempOutput/",
        CheckBarcodeFolderPathsUsingWildcards
    output:
        # config['results_folder'] + "Barcode/merge_complete"  # BEST OPTION SO FAR
        directory(config['results_folder'] + "Barcode/{barcode_folder}")
    params:
        barcode_number = "{barcode_folder}",
        temp_barcode_path = config['results_folder'] + ".barcodeTempOutput/" + "{barcode_folder}"
    shell:
        r"""
        cp -r {params.temp_barcode_path} {output}
        """

