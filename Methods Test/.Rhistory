densityplot(~seq_len, data=subset(ff, bit_flag==0))
ff
densityplot(~seq_len, data=subset(ff, bit_flag==0))
head(ff)
class(ff)
subset(ff, bit_flag==0)
subset(ff, bit_flag==0) %>%
densityplot(~seq_len, data=.)
head(ff)
densityplot(~seq_length, data=subset(ff, bit_flag==0))
sff = subset(ff, bit_flag==0)
?quantile
sff = subset(ff, bit_flag==0) %>%
quantile(probs=c(0.001, 0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99, 0.999))
sff = subset(ff, bit_flag==0, select=seq_length) %>%
quantile(probs=c(0.001, 0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99, 0.999))
sff = subset(ff, bit_flag==0, select='seq_length') %>%
quantile(probs=c(0.001, 0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99, 0.999))
names(ff)
sff = subset(ff, bit_flag==0) %>%
extract('seq_length') %>%
quantile(probs=c(0.001, 0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99, 0.999))
sff = subset(ff, bit_flag==0)# %>%
head(sff)
sff = subset(ff, bit_flag==0) %>%
extract(, 'seq_length') %>%
quantile(probs=c(0.001, 0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99, 0.999))
sff
```{r fig.height=5, fig.width=5}
xyplot(score ~ seq_length, data=subset(ff, bit_flag==0), alpha=0.2, pch=1, type=c('r', 'p'))
xyplot(divergence ~ seq_length, data=subset(ff, bit_flag==0), alpha=0.2, pch=1, type=c('r', 'p'))
xyplot(QtoPr(quality) ~ seq_length, data=subset(ff, bit_flag==0), alpha=0.2, pch=1, type=c('r', 'p'))
head(ff)
densityplot(~seq_length | quality, data=subset(ff, bit_flag==0), alpha=0.2, pch=1)
densityplot(~seq_length | factor(quality), data=subset(ff, bit_flag==0), alpha=0.5, pch=1)
densityplot(~seq_length | factor(quality), data=subset(ff, bit_flag==0), alpha=0.5, pch=1, scales=list('free.y'))
densityplot(~seq_length | factor(quality), data=subset(ff, bit_flag==0), alpha=0.5, pch=1, scales=list(y='free'))
densityplot(~seq_length | factor(quality), data=subset(ff, bit_flag==0), alpha=0.5, pch=1, scales=list(y='free'))
xyplot(QtoPr(quality) ~ seq_length, data=subset(ff, bit_flag==0), alpha=0.2, pch=1, type=c('r', 'p'))
xyplot(seq_length ~ QtoPr(quality), data=subset(ff, bit_flag==0), alpha=0.2, pch=1, type=c('r', 'p'))
densityplot(~QtoPr(quality), data=subset(ff, bit_flag==0), alpha=0.5, pch=1, scales=list(y='free'))
summary(factor(ff$quality))
summary(factor(ff$quality))/nrow(ff)
sff = subset(ff, bit_flag==0)# %>%
summary(factor(sff$quality))/nrow(sff)
densityplot(~score, data=subset(ff, bit_flag==0), alpha=0.5, pch=1, scales=list(y='free'))
densityplot(~score, data=subset(ff, bit_flag==0 & barcode %in% c(56, 60)), alpha=0.5, pch=1, scales=list(y='free'))
subset(ff, bit_flag==0) %>%
extract(, 'score') %>%
quantile(probs=c(0.001, 0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99, 0.999))
subset(ff, bit_flag==0 & barcode %in% c(56, 60)) %>%
extract(, 'score') %>%
quantile(probs=c(0.001, 0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99, 0.999))
densityplot(~log(score), data=subset(ff, bit_flag==0 & barcode %in% c(56, 60)), alpha=0.5, pch=1, scales=list(y='free'))
densityplot(~exp(score), data=subset(ff, bit_flag==0 & barcode %in% c(56, 60)), alpha=0.5, pch=1, scales=list(y='free'))
densityplot(~score^2, data=subset(ff, bit_flag==0 & barcode %in% c(56, 60)), alpha=0.5, pch=1, scales=list(y='free'))
densityplot(~score, data=subset(ff, bit_flag==0 & barcode %in% c(56, 60)), alpha=0.5, pch=1, scales=list(y='free'))
pnorm(2.5)
pnorm(2)
subset(ff, bit_flag==0 & barcode %in% c(56, 60)) %>%
extract(, 'score') %>%
quantile(probs=c(0.001, 0.01, 0.2, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99, 0.999))
subset(ff, bit_flag==0 & barcode %in% c(56, 60)) %>%
extract(, 'score') %>%
quantile(probs=c(0.001, 0.01, 0.02, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99, 0.999))
subset(ff, bit_flag==0 & barcode %in% c(56, 60)) %>%
extract(, 'score') %>%
quantile(probs=c(0.001, 0.01, 0.023, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99, 0.999))
subset(ff, bit_flag==0 & barcode %in% c(56, 60)) %>%
extract(, 'score') %>%
quantile(probs=c(0.001, 0.01, 0.025, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99, 0.999))
libs = c('pROC', 'lattice', 'latticeExtra', 'here', 'magrittr', 'data.table')
for (i in libs) library(i, character.only=TRUE)
pltdf = subset(ff, bit_flag==0 & barcode %in% c(56, 60))
head(pltdf)
layer(panel.abline(v=quantile(pltdf$score, c(0.001, 0.01, 0.025, 0.05, 0.1, 0.25, 0.5))))
pltdf = subset(ff, bit_flag==0 & barcode %in% c(56, 60))
densityplot(~score, data=pltdf, alpha=0.5, pch=1, scales=list(y='free') +
densityplot(~score, data=pltdf, alpha=0.5, pch=1, scales=list(y='free') +
layer(panel.abline(v=quantile(pltdf$score, c(0.001, 0.01, 0.025, 0.05, 0.1, 0.25, 0.5))), data=pltdf))
))))
densityplot(~score, data=pltdf, alpha=0.5, pch=1, scales=list(y='free') +
layer(panel.abline(v=quantile(pltdf$score, c(0.001, 0.01, 0.025, 0.05, 0.1, 0.25, 0.5))), data=pltdf))
densityplot(~score, data=pltdf, alpha=0.5, pch=1, scales=list(y='free') +
layer(panel.abline(v=quantile(pltdf$score, c(0.001, 0.01, 0.025, 0.05, 0.1, 0.25, 0.5)))))
densityplot(~score, data=pltdf, alpha=0.5, pch=1, scales=list(y='free') +
layer(panel.abline(v=1275)))
densityplot(~score, data=pltdf, alpha=0.5, pch=1, scales=list(y='free') +
)))
densityplot(~score, data=pltdf, alpha=0.5, pch=1, scales=list(y='free')) +
layer(panel.abline(v=1275))
densityplot(~score, data=pltdf, alpha=0.5, pch=1, scales=list(y='free')) +
layer(panel.abline(v=c(1052, 1275)))
dotplot(score ~ barcode, data=subset(ff, bit_flag==0), alpha=0.2, pch=1, type=c('r', 'p'))
```{r fig.height=5, fig.width=8}
dotplot(score ~ barcode, data=subset(ff, bit_flag==0), alpha=0.2, pch=1, type=c('r', 'p'))
dotplot(score ~ barcode, data=subset(ff, bit_flag==0), alpha=0.2, pch=1)
densityplot(~divergence, data=pltdf, alpha=0.5, pch=1, scales=list(y='free'))# +
pr = c(0.001, 0.01, 0.025, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99, 0.999)
quantile(pltdf$score, probs = pr)
densityplot(~score, data=pltdf, alpha=0.5, pch=1, scales=list(y='free')) +
layer(panel.abline(v=quantile(pltdf$score, probs=pr)))
pr = c(0.001, 0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99, 0.999)
densityplot(~score, data=pltdf, alpha=0.5, pch=1, scales=list(y='free')) +
layer(panel.abline(v=quantile(pltdf$score, probs=pr)))
plt_data = pltdf$divergence
densityplot(~plt_data, alpha=0.5, pch=1, scales=list(y='free')) +
layer(panel.abline(v=quantile(plt_data, probs=pr)))
densityplot(~plt_data, alpha=0.5, pch=1, scales=list(y='free'), main=pr) +
layer(panel.abline(v=quantile(plt_data, probs=pr)))
densityplot(~plt_data, alpha=0.5, pch=1, scales=list(y='free'), main=paste(pr, collapse='%, ') +
))))))
densityplot(~plt_data, alpha=0.5, pch=1, scales=list(y='free'), main=paste(pr, collapse='%, ')) +
layer(panel.abline(v=quantile(plt_data, probs=pr)))
pltdf = subset(ff, bit_flag==0 & barcode %in% c(56, 60))
pr = c(0.001, 0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99, 0.999)
densityplot(~score, data=pltdf, alpha=0.5, pch=1, scales=list(y='free'), main=paste(pr, collapse='%, ')) +
layer(panel.abline(v=quantile(pltdf$score, probs=pr)))
pltdf = subset(ff, bit_flag==0 & barcode %in% c(56, 60))
pr = c(0.001, 0.01, 0.05, 0.1, 0.5, 0.75, 0.9, 0.95, 0.99, 0.999)
densityplot(~score, data=pltdf, alpha=0.5, pch=1, scales=list(y='free'), main=paste(pr, collapse='%, ')) +
layer(panel.abline(v=quantile(pltdf$score, probs=pr)))
pltdf = subset(ff, bit_flag==0 & score > seq_length)
dim(pltdf)
dim(ff)
dim(subset(ff, bit_flag==0))
pltdf$score_ratio = with(pltdf, score / seq_length)
densityplot(~score_ratio, data=pltdf, alpha=0.5, pch=1, scales=list(y='free'), main=paste(pr, collapse='%, ')) +
layer(panel.abline(v=quantile(pltdf$score, probs=pr)))
plt_data = pltdf$score_ratio
densityplot(~plt_data, data=pltdf, alpha=0.5, pch=1, scales=list(y='free'), main=paste(pr, collapse='%, ')) +
layer(panel.abline(v=quantile(plt_data, probs=pr)))
range(pltdf$score_ratio)
pltdf = subset(ff, bit_flag==0 & barcode %in% c(56, 60))
pltdf$score_ratio = with(pltdf, score / seq_length)
pr = c(0, 0.01, 0.05, 0.1, 0.5, 0.75, 0.9, 0.95, 0.99, 1)
plt_data = pltdf$score_ratio
densityplot(~plt_data, data=pltdf, alpha=0.5, pch=1, scales=list(y='free'), main=paste(pr, collapse='%, ')) +
layer(panel.abline(v=quantile(plt_data, probs=pr)))
pltdf = subset(ff, bit_flag==0 & barcode %in% c(56, 60))
pltdf$score_ratio = with(pltdf, score / seq_length)
pr = c(0, 0.01, 0.05, 0.1, 0.5, 0.75, 0.9, 0.95, 0.99, 1)
plt_data = pltdf$score_ratio
densityplot(~plt_data, data=pltdf, alpha=0.5, pch=1, scales=list(y='free'), main=paste(pr, collapse='%, ')) +
layer(panel.abline(v=quantile(plt_data, probs=pr)))
pltdf = subset(ff, bit_flag==0 & barcode %in% c(56, 60))
pltdf$score_ratio = with(pltdf, score / seq_length)
pr = c(0.001, 0.01, 0.05, 0.1, 0.5, 0.75, 0.9, 0.95, 0.99, 0.999)
plt_data = pltdf$score_ratio
densityplot(~plt_data, data=pltdf, alpha=0.5, pch=1, scales=list(y='free'), main=paste(pr, collapse='%, ')) +
layer(panel.abline(v=quantile(plt_data, probs=pr)))
densityplot(~plt_data, data=pltdf, alpha=0.5, pch=1, scales=list(y='free'), main=paste(100*pr, collapse='%, ')) +
layer(panel.abline(v=quantile(plt_data, probs=pr)))
val = 'score_ratio'
plt_data = pltdf[val]
densityplot(~plt_data, data=pltdf, alpha=0.5, pch=1, scales=list(y='free'), main=paste(val, paste(100*pr, collapse='%, '))) +
layer(panel.abline(v=quantile(plt_data, probs=pr)))
val = 'score_ratio'
plt_data = pltdf[val]
densityplot(~plt_data, data=pltdf, alpha=0.5, pch=1, scales=list(y='free'), main=paste(val, paste(100*pr, collapse='%, '))) +
layer(panel.abline(v=quantile(plt_data, probs=pr)))
pltdf = subset(ff, bit_flag==0 & barcode %in% c(56, 60))
pltdf$score_ratio = with(pltdf, score / seq_length)
pr = c(0.001, 0.01, 0.05, 0.1, 0.5, 0.75, 0.9, 0.95, 0.99, 0.999)
val = 'score_ratio'
plt_data = pltdf[val]
densityplot(~plt_data, data=pltdf, alpha=0.5, pch=1, scales=list(y='free'), main=paste(val, paste(100*pr, collapse='%, '))) +
layer(panel.abline(v=quantile(plt_data, probs=pr)))
pltdf = subset(ff, bit_flag==0 & barcode %in% c(56, 60))
pltdf$score_ratio = with(pltdf, score / seq_length)
pr = c(0.001, 0.01, 0.05, 0.1, 0.5, 0.75, 0.9, 0.95, 0.99, 0.999)
val = 'score_ratio'
plt_data = pltdf[, val]
densityplot(~plt_data, alpha=0.5, pch=1, scales=list(y='free'), main=paste(val, paste(100*pr, collapse='%, '))) +
layer(panel.abline(v=quantile(plt_data, probs=pr)))
densityplot(~plt_data, xlab=val, alpha=0.5, pch=1, scales=list(y='free'), main=paste(100*pr, collapse='%, ')) +
layer(panel.abline(v=quantile(plt_data, probs=pr)))
knitr::opts_chunk$set(message=FALSE,
warning=FALSE,
fig.align='center')
libs = c('pROC', 'lattice', 'latticeExtra', 'here', 'magrittr', 'data.table')
for (i in libs) library(i, character.only=TRUE)
fns = here('Scripts', 'Functions') %>%
list.files(pattern='.R', full.names=TRUE)
for (f in fns) source(f)
path = here('Data', 'Pipeline Results', 'Alignments', 'guppy', 'SAM_Files', 'guppy_aligner_barcode01.sam')
# in_clas = "collated_primary_alignment_data.tsv"
# in_uncl = "collated_unclassified_alignment_data.tsv"
in_dir = file.path('Data', 'Pipeline Results', 'Alignments', 'guppy', 'SAM_Files')
ff = here(in_dir) %>%
list.files(pattern='*.sam') %>%
lapply(function(x) {
out = here(in_dir, x) %>%
load_sam
out$aligner = strsplit(x, '_') %>%
sapply(extract, 1)
out$barcode = strsplit(x, '_barcode') %>%
sapply(extract, 2) %>%
gsub('.sam', '', .)
out$filename = x
return(out)
}) %>%
do.call(rbind, .)
dotplot(QtoPr(quality)~barcode, data=subset(ff, bit_flag==0), scales=list(x=list(rot=90)), alpha=0.2, pch=20)
dotplot(divergence~barcode, data=subset(ff, bit_flag==0), scales=list(x=list(rot=90)), alpha=0.2, pch=1)
xyplot(divergence ~ score | barcode, data=subset(ff, bit_flag==0), alpha=0.2, pch=1, type=c('r', 'p'))
dotplot(score ~ barcode, data=subset(ff, bit_flag==0), alpha=0.2, pch=1)
pltdf = subset(ff, bit_flag==0 & barcode %in% c(56, 60))
pltdf$score_ratio = with(pltdf, score / seq_length)
pr = c(0.001, 0.01, 0.05, 0.1, 0.5, 0.75, 0.9, 0.95, 0.99, 0.999)
val = 'score_ratio'
plt_data = pltdf[, val]
densityplot(~plt_data, xlab=val, alpha=0.5, pch=1, scales=list(y='free'), main=paste(100*pr, collapse='%, ')) +
layer(panel.abline(v=quantile(plt_data, probs=pr)))
levels(factor(ff$barcode))
pltdf = subset(ff, bit_flag==0 & !(barcode %in% c(56, 60)))
pltdf$score_ratio = with(pltdf, score / seq_length)
pr = c(0.001, 0.01, 0.05, 0.1, 0.5, 0.75, 0.9, 0.95, 0.99, 0.999)
val = 'score_ratio'
plt_data = pltdf[, val]
densityplot(~plt_data, xlab=val, alpha=0.5, pch=1, scales=list(y='free'), main=paste(100*pr, collapse='%, ')) +
layer(panel.abline(v=quantile(plt_data, probs=pr)))
pltdf = subset(ff, bit_flag==0 & barcode %in% c(56, 60))
pltdf$score_ratio = with(pltdf, score / seq_length)
pr = c(0.001, 0.01, 0.05, 0.1, 0.5, 0.75, 0.9, 0.95, 0.99, 0.999)
val = 'score_ratio'
plt_data = pltdf[, val]
densityplot(~plt_data, xlab=val, alpha=0.5, pch=1, scales=list(y='free'), main=paste(100*pr, collapse='%, ')) +
layer(panel.abline(v=quantile(plt_data, probs=pr)))
quantile(plt_data, .15)
quantile(plt_data, .20)
pltdf = subset(ff, bit_flag==0 & barcode %in% c(56, 60))
pltdf$score_ratio = with(pltdf, score / seq_length)
pr = c(0.001, 0.01, 0.05, 0.1, 0.5, 0.75, 0.9, 0.95, 0.99, 0.999)
val = 'score'
plt_data = pltdf[, val]
densityplot(~plt_data, xlab=val, alpha=0.5, pch=1, scales=list(y='free'), main=paste(100*pr, collapse='%, ')) +
layer(panel.abline(v=quantile(plt_data, probs=pr)))
meta = read.csv(in_meta, stringsAsFactors=FALSE)
in_meta = here('Data', 'MinION CLC Barcodes.csv')
meta = read.csv(in_meta, stringsAsFactors=FALSE)
head(meta)
meta$BARCODE %<>% gsub('BC', '', .)
head(meta)
str(meta)
str(ff)
df = ff
sum(ff$barcode %in% meta$BARCODE)
sum(meta$BARCODE %in% ff$barcode)
sum(!(meta$BARCODE %in% ff$barcode))
summary(factor(meta$BARCODE))
summary(factor(ff$barcode))
df = here(in_dir) %>%
list.files(pattern='*.sam') %>%
lapply(function(x) {
out = here(in_dir, x) %>%
load_sam
out$aligner = strsplit(x, '_') %>%
sapply(extract, 1)
out$barcode = strsplit(x, '_barcode') %>%
sapply(extract, 2) %>%
gsub('.sam', '', .) %>%
sapply(function(y) ifelse(is.na(y), 'Unknown', y))
out$filename = x
return(out)
}) %>%
do.call(rbind, .)
head(df)
summary(df)
summary(factor(df$barcode))
summary(meta$barcode)
summary(meta$BARCODE %>% factor)
summary(meta$BARCODE %>% factor) %>% length
summary(factor(df$barcode)) %>% length
head(meta)
df = merge(df, meta[, c('BARCODE', 'TYPE')], by.x='barcode', by.y='BARCODE', all.x=TRUE)
dim(df)
head(df)
tail(df)
summary(df)
summary(df$TYPE) %>% as.factor
summary(df$TYPE %>% as.factor)
pos = subset(df, df$TYPE == 'positive')
head(pos)
dim(pos)
summary(pos$barcode)
summary(pos$barcode %>% factor)
unique(pos$barcode)
unique(pos$bit_flag)
?load_sam
load_sam
subset(pos, bit_flag >= 2048)
dotplot(QtoPr(quality)~barcode, data=pos, group=bit_flag, auto.key=TRUE, scales=list(x=list(rot=90)), alpha=0.2, pch=20)
dotplot(quality~barcode, data=pos, group=bit_flag, auto.key=TRUE, scales=list(x=list(rot=90)), alpha=0.2, pch=20)
QtoPr(quality)
dotplot(QtoPr(quality)~barcode, data=pos, group=bit_flag, auto.key=TRUE, scales=list(x=list(rot=90)), alpha=0.2, pch=20)
dotplot(QtoPr(quality)~barcode, data=pos, group=bit_flag, auto.key=list(nrow=3), scales=list(x=list(rot=90)), alpha=0.2, pch=20)
dotplot(QtoPr(quality)~barcode, data=pos, group=bit_flag, auto.key=list(ncol=3), scales=list(x=list(rot=90)), alpha=0.2, pch=20)
?xyplot
dotplot(QtoPr(quality)~barcode, data=pos, group=bit_flag, auto.key=list(columns=3), scales=list(x=list(rot=90)), alpha=0.2, pch=20)
densityplot(~QtoPr(quality) | barcode, data=pos, group=bit_flag, auto.key=list(columns=3), scales=list(x=list(rot=90)), alpha=0.2, pch=20)
densityplot(~QtoPr(quality) | barcode, data=pos, group=bit_flag, auto.key=list(columns=3), scales=list(x=list(rot=90)), alpha=0.5, pch=20)
densityplot(~QtoPr(quality) | barcode, data=pos, group=bit_flag, auto.key=list(columns=3), scales=list(x=list(rot=90, lims=c(0,1))), alpha=0.5, pch=20)
densityplot(~QtoPr(quality) | barcode, data=pos, group=bit_flag, auto.key=list(columns=3), scales=list(x=list(rot=90, limits=c(0,1))), alpha=0.5, pch=20)
densityplot(~QtoPr(quality) | barcode, data=pos, group=bit_flag, auto.key=list(columns=3), scales=list(x=list(rot=90, limits=c(-0.1,1.1))), alpha=0.5, pch=20)
dotplot(divergence~barcode, data=subset(pos, bit_flag==0), scales=list(x=list(rot=90)), alpha=0.2, pch=1)
ff
dotplot(divergence~barcode, data=subset(ff, bit_flag==0), scales=list(x=list(rot=90)), alpha=0.2, pch=1)
dotplot(divergence~barcode, data=subset(ff), group=bit_flag, auto.key=list(columns=3), scales=list(x=list(rot=90)), alpha=0.2, pch=1)
xyplot(divergence ~ score | barcode, group=bit_flag, data=subset(ff), auto.key=list(columns=3), alpha=0.2, pch=1, type=c('r', 'p'))
xyplot(divergence ~ score | barcode, group=bit_flag, data=subset(ff), auto.key=list(columns=3), alpha=0.2, pch=1)
barchart(~summary(as.factor(ff$barcode)))
barchart(summary(as.factor(ff$barcode))~, scales=list(x=list(rot=90)))
barchart(summary(as.factor(ff$barcode)), scales=list(x=list(rot=90)))
barchart(log2(summary(as.factor(ff$barcode))))
barchart(tapply(ff$seq_length, ff$barcode, mean))
barchart(tapply(ff$seq_length, as.factor(ff$barcode), mean))
tapply(ff$seq_length, as.factor(ff$barcode), mean)
tapply(ff$seq_length, as.factor(ff$barcode), mean, na.omit=TRUE)
tapply(ff$seq_length, as.factor(ff$barcode), mean, na.rm=TRUE)
barchart(tapply(ff$seq_length, as.factor(ff$barcode), mean, na.rm=TRUE))
substr('abc', 1)
substr('abc', 1, 1)
fns = here('Scripts', 'Functions') %>%
list.files(pattern='.R', full.names=TRUE)
for (f in fns) source(f)
df = here(in_dir) %>%
list.files(pattern='*.sam') %>%
lapply(function(x) {
out = here(in_dir, x) %>%
load_sam
out$aligner = strsplit(x, '_') %>%
sapply(extract, 1)
out$barcode = strsplit(x, '_barcode') %>%
sapply(extract, 2) %>%
gsub('.sam', '', .) %>%
sapply(function(y) ifelse(is.na(y), 'Unknown', y))
out$filename = x
return(out)
}) %>%
do.call(rbind, .)
head(df)
guppy = df
in_minimap = file.path(in_sam, 'minimap', 'csv_results')
# in_clas = "collated_primary_alignment_data.tsv"
# in_uncl = "collated_unclassified_alignment_data.tsv"
in_sam = file.path('Data', 'Pipeline Results', 'Alignments')
in_guppy = file.path(in_sam, 'guppy', 'SAM_Files')
in_meta = here('Data', 'MinION CLC Barcodes.csv')
guppy = here(in_dir) %>%
list.files(pattern='*.sam') %>%
lapply(function(x) {
out = here(in_dir, x) %>%
load_sam
out$aligner = strsplit(x, '_') %>%
sapply(extract, 1)
out$barcode = strsplit(x, '_barcode') %>%
sapply(extract, 2) %>%
gsub('.sam', '', .) %>%
sapply(function(y) ifelse(is.na(y), 'Unknown', y))
out$filename = x
return(out)
}) %>%
do.call(rbind, .)
guppy = here(in_guppy) %>%
list.files(pattern='*.sam') %>%
lapply(function(x) {
out = here(in_dir, x) %>%
load_sam
out$aligner = strsplit(x, '_') %>%
sapply(extract, 1)
out$barcode = strsplit(x, '_barcode') %>%
sapply(extract, 2) %>%
gsub('.sam', '', .) %>%
sapply(function(y) ifelse(is.na(y), 'Unknown', y))
out$filename = x
return(out)
}) %>%
do.call(rbind, .)
minimap = here(in_minimap) %>%
list.files(pattern='*.csv') %>%
lapply(function(x) {
out = here(in_dir, x) %>%
load_sam
out$aligner = strsplit(x, '_') %>%
sapply(extract, 1)
out$barcode = strsplit(x, '_barcode') %>%
sapply(extract, 2) %>%
gsub('.sam', '', .) %>%
sapply(function(y) ifelse(is.na(y), 'Unknown', y))
out$filename = x
return(out)
}) %>%
do.call(rbind, .)
in_minimap = file.path(in_sam, 'minimap', 'csv_results')
in_meta = here('Data', 'MinION CLC Barcodes.csv')
minimap = here(in_minimap) %>%
list.files(pattern='*.csv') %>%
lapply(function(x) {
out = here(in_dir, x) %>%
load_sam
out$aligner = strsplit(x, '_') %>%
sapply(extract, 1)
out$barcode = strsplit(x, '_barcode') %>%
sapply(extract, 2) %>%
gsub('.sam', '', .) %>%
sapply(function(y) ifelse(is.na(y), 'Unknown', y))
out$filename = x
return(out)
}) %>%
do.call(rbind, .)
# in_clas = "collated_primary_alignment_data.tsv"
# in_uncl = "collated_unclassified_alignment_data.tsv"
in_sam = file.path('Data', 'Pipeline Results', 'Alignments')
in_guppy = file.path(in_sam, 'guppy', 'SAM_Files')
in_minimap = file.path(in_sam, 'minimap', 'csv_results')
in_path = in_guppy
ext = '.sam'
guppy = here(in_path) %>%
list.files(pattern=ext) %>%
lapply(function(x) {
out = here(in_path, x) %>%
load_sam
out$aligner = strsplit(x, '_') %>%
sapply(extract, 1)
out$barcode = strsplit(x, '_barcode') %>%
sapply(extract, 2) %>%
gsub('.sam', '', .) %>%
sapply(function(y) ifelse(is.na(y), 'Unknown', y))
out$filename = x
return(out)
}) %>%
do.call(rbind, .)
in_path = in_minimap
ext = '.csv'
guppy = here(in_path) %>%
list.files(pattern=ext) %>%
lapply(function(x) {
out = here(in_path, x) %>%
load_sam
out$aligner = strsplit(x, '_') %>%
sapply(extract, 1)
out$barcode = strsplit(x, '_barcode') %>%
sapply(extract, 2) %>%
gsub(ext, '', .) %>%
sapply(function(y) ifelse(is.na(y), 'Unknown', y))
out$filename = x
return(out)
}) %>%
do.call(rbind, .)
head(guppy)
minimap = here(in_path) %>%
list.files(pattern=ext) %>%
lapply(function(x) {
out = here(in_path, x) %>%
load_sam
out$aligner = strsplit(x, '_') %>%
sapply(extract, 1)
out$barcode = strsplit(x, '_barcode') %>%
sapply(extract, 2) %>%
gsub(ext, '', .) %>%
sapply(function(y) ifelse(is.na(y), 'Unknown', y))
out$filename = x
return(out)
}) %>%
do.call(rbind, .)
head(minimap)
minimap = here(in_path) %>%
list.files(pattern=ext) #%>%
minimap
out = here(in_path, minimap[1])
out
path = out
sam = readLines(path)
head(sam)
is_header = sapply(sam, substr, 1, 1) %>%
equals('@')
is_header
sum(is_header)
?substr
substr(c(letters[1:4], letters[5:8]), 1, 1)
substr(list(letters[1:4], letters[5:8]), 1, 1)
substr(sam, 1, 1) %>% head
is_header = substr(sam, 1, 1) == '@'
sum(is_header)
head(is_header)
sam %<>%
.[!is_header] %>%
strsplit('\t')
sam[1]
sam[1]
is_secondary = sapply(sam, function(x) x[2] == 256)
sum(is_secondary)
sam %<>% .[!is_secondary]
dim(sam)
sam = readLines(path)
is_header = substr(sam, 1, 1) == '@'
sam %<>%
.[!is_header] %>%
strsplit('\t')
is_secondary = sapply(sam, function(x) x[2] == 256)
is_secondary
sam %<>% .[!is_secondary]
head(sam)
head(sam[[1]])
x = sam[[1]]
x[2] == 4
x
is_chimeric = grepl('SA:Z:', x) %>%
any
is_chimeric
x
